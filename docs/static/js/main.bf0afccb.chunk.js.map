{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifApp.js","index.js"],"names":["AddCategory","setCategories","category","useState","inputValue","setInputValue","onSubmit","e","preventDefault","validar","find","evento","alert","type","onChange","target","value","getGifs","a","limit","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAC3C,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,sBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAUP,EAASQ,MAAK,SAACC,GAAD,OAAYA,IAAWP,KAClC,KAAfA,EACFQ,MAAM,kBACGH,IAAYL,EACrBQ,MAAM,+BACDX,EAAc,CAACG,GAAF,mBAAiBF,KACrCG,EAAc,KAId,SACE,uBAAOQ,KAAK,OAAOC,SAhBF,SAACP,GACpBF,EAAcE,EAAEQ,OAAOC,QAesBA,MAAOZ,O,+BCFzCa,EAnBF,uCAAG,2CAAAC,EAAA,6DAAShB,EAAT,EAASA,SAAT,IAAmBiB,aAAnB,MAA2B,GAA3B,EACC,mCACC,gCAEVC,EAJQ,UAEE,gCAFF,2BACC,mCADD,cAIuClB,EAJvC,kBAIyDiB,GAJzD,SAMKE,MAAMD,GANX,cAMRE,EANQ,gBAOSA,EAAKC,OAPd,uBAONC,EAPM,EAONA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,IAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,iBAAE,EAAYC,wBAAd,aAAE,EAA8BX,QAbzB,kBAgBPK,GAhBO,4CAAH,sDCEAO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACvC,OACE,sBAAKa,UAAU,mDAAf,UACE,qBAAKA,UAAU,SAASC,IAAKd,EAAKe,IAAKN,IACvC,oBAAII,UAAU,SAAd,SAAwBJ,QCFjBO,EAAU,SAAC,GAAkB,IAAhBlC,EAAe,EAAfA,SACxB,ECF0B,SAACA,GAC3B,MAA0BC,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRvB,EAAQ,CAAEf,aAAYuC,MAAK,SAACd,GAAD,OACzBY,EAAS,CACPf,KAAMG,EACNU,SAAS,SAGZ,CAACnC,IAEGoC,EDbmBI,CAAaxC,GAA/BsB,EAAR,EAAQA,KAAMa,EAAd,EAAcA,QAEd,OACE,qCACE,oBAAIJ,UAAU,+CAAd,SACG/B,IAGFmC,GAAW,mBAAGJ,UAAU,UAAb,wBAEV,6BACGT,EAAKE,KAAI,SAACC,GACT,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEb5Be,EAAS,WACpB,MAAoCxC,mBAAS,CAAC,YAA9C,mBAAOyC,EAAP,KAAmB3C,EAAnB,KACA,OACE,qCACE,4CACA,uBACA,cAAC,EAAD,CAAaC,SAAU0C,EAAY3C,cAAeA,IAClD,6BACG2C,EAAWlB,KAAI,SAACxB,GACf,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCR/B2C,IAASC,OAAO,cAAC,EAAD,IAAYC,SAASC,eAAe,W","file":"static/js/main.bf0afccb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories, category }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleSudmit = (e) => {\r\n    e.preventDefault();\r\n    const validar = category.find((evento) => evento === inputValue);\r\n    if (inputValue === \"\") {\r\n      alert(\"ADD A NEW GIFT\");\r\n    } else if (validar === inputValue) {\r\n      alert(\"YOU ALREADY ADDED THAT GIFT\");\r\n    } else setCategories([inputValue, ...category]);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSudmit}>\r\n      <input type=\"text\" onChange={handleChange} value={inputValue} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","const getGifs = async ({ category, limit = 10 }) => {\r\n  const apiKey = \"0BIFGjWk2IsqgJbAzAKQJqQpvIO4vRZJ\";\r\n  const baseUrl = \"https://api.giphy.com/v1/gifs\";\r\n\r\n  const url = `${baseUrl}/search?api_key=${apiKey}&q=${category}&limit=${limit}`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium?.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n\r\nexport default getGifs;\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"contenedor animate__animated animate__rubberBand\">\r\n      <img className=\"imagen\" src={url} alt={title} />\r\n      <li className=\"titulo\">{title}</li>\r\n    </div>\r\n  );\r\n};\r\n//class=\"card\"\r\n/*\r\nClases de css\r\n- agregar estilo para visuliazar todos las imagenes del mismo tamaÃ±o\r\n- que las imagenes no se deformen\r\n- que se entienda la divicion de cada categoria\r\n- que las categorias traigan los gif relacionados agregar\r\n*/\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"pepeto animate__animated animate__rubberBand\">\r\n        {category}\r\n      </h3>\r\n\r\n      {loading && <p className=\"mensaje\">\"Cargado\" </p>}\r\n      {\r\n        <ol>\r\n          {data.map((img) => {\r\n            return <GifGridItem key={img.id} {...img} />;\r\n          })}\r\n        </ol>\r\n      }\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs({ category }).then((img) =>\r\n      setState({\r\n        data: img,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./AddCategory\";\r\nimport { GifGrid } from \"./GifGrid\";\r\n\r\nexport const GifApp = () => {\r\n  const [categories, setCategories] = useState([\"pokemon\"]);\r\n  return (\r\n    <>\r\n      <h2>GIF SEARCH</h2>\r\n      <hr />\r\n      <AddCategory category={categories} setCategories={setCategories} />\r\n      <ol>\r\n        {categories.map((category) => {\r\n          return <GifGrid key={category} category={category} />;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { GifApp } from \"./components/GifApp\";\n\nReactDOM.render(<GifApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}